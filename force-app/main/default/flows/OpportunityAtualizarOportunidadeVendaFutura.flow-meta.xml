<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>AtribuirGanho</name>
        <label>Atribuir Ganho</label>
        <locationX>314</locationX>
        <locationY>684</locationY>
        <assignmentItems>
            <assignToReference>EstagioOportunidade</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Ganho</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AtualizarOportunidade</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AtribuirGanhoPagamentoFuturo</name>
        <label>Atribuir Ganho Pagamento Futuro</label>
        <locationX>50</locationX>
        <locationY>684</locationY>
        <assignmentItems>
            <assignToReference>EstagioOportunidade</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Ganho Pagamento Futuro </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AtualizarOportunidade</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Existe_Quote</name>
        <label>Existe Quote?</label>
        <locationX>611</locationX>
        <locationY>360</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SimExiste_Quote</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetQuote.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>InicioDoContratoHoje</targetReference>
            </connector>
            <label>Sim</label>
        </rules>
    </decisions>
    <decisions>
        <name>InicioDoContratoHoje</name>
        <label>Inicio do contrato é hoje?</label>
        <locationX>380</locationX>
        <locationY>468</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>InicioContrato</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetQuote.DataVendaFutura__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>DataAtual</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>VerificarVendaFutura</targetReference>
            </connector>
            <label>Inicio do contrato</label>
        </rules>
    </decisions>
    <decisions>
        <name>VerificarVendaFutura</name>
        <label>Verificar Venda Futura</label>
        <locationX>182</locationX>
        <locationY>576</locationY>
        <defaultConnector>
            <targetReference>AtribuirGanho</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Venda Normal</defaultConnectorLabel>
        <rules>
            <name>VendaFutura</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CotacaoPagamentoFuturo__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetQuote.Sincronizado__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetQuote.PagamentoFuturo__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AtribuirGanhoPagamentoFuturo</targetReference>
            </connector>
            <label>Venda Futura</label>
        </rules>
    </decisions>
    <description>Flow desenvolvido para rodar diariamente e atualizar a oportunidade Venda Futura para Ganho quando a data de início do contrato for igual a hoje</description>
    <environments>Default</environments>
    <formulas>
        <name>DataAtual</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <formulas>
        <name>DataInicioContratoConvertido</name>
        <dataType>Date</dataType>
        <expression>DATEVALUE({!$Record.ContractStartDate__c})</expression>
    </formulas>
    <interviewLabel>[Opportunity] - Atualizar Oportunidade Venda Futura {!$Flow.CurrentDateTime}</interviewLabel>
    <label>[Opportunity] - Atualizar Oportunidade Venda Futura</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetQuote</name>
        <label>Get Quote</label>
        <locationX>611</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Existe_Quote</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>DataVendaFutura__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Quote</object>
        <sortField>DataVendaFutura__c</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>AtualizarOportunidade</name>
        <label>Atualizar Oportunidade</label>
        <locationX>182</locationX>
        <locationY>876</locationY>
        <inputAssignments>
            <field>StageName</field>
            <value>
                <elementReference>EstagioOportunidade</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>485</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetQuote</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>StageName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Venda Futura</stringValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <schedule>
            <frequency>Daily</frequency>
            <startDate>2025-01-06</startDate>
            <startTime>11:53:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>EstagioOportunidade</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
